# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions

from .employee_id import EmployeeId
from .store_customer import StoreCustomer


class StoreEmployee(StoreCustomer):
    employee_id: EmployeeId = pydantic.Field(alias="employeeId")

    class Partial(StoreCustomer.Partial):
        employee_id: typing_extensions.NotRequired[EmployeeId]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        extra = pydantic.Extra.forbid
